name: Build and Release LaTeX PDF

on:
  push:
    tags:
      - "v*"  # 仅当 tag 以 v 开头时触发，例如 v1.0.0
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # --- Step 1. 检出代码 ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Step 2. 缓存 apt 软件包 ---
      - name: Cache APT packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/*.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      # --- Step 3. 安装 Pandoc ---
      - name: Install Pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc
          pandoc --version

      # --- Step 4. 安装 uv 环境管理器 ---
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "${HOME}/.cargo/bin" >> $GITHUB_PATH

      # --- Step 5. 缓存 Python 虚拟环境 ---
      - name: Cache Python venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      # --- Step 6. 创建虚拟环境并安装依赖 ---
      - name: Setup Python environment with uv
        run: |
          uv python install
          uv sync --all-extras --dev

      # --- Step 7. 缓存 TeX Live 包 ---
      - name: Cache TeX Live
        uses: actions/cache@v4
        with:
          path: /usr/local/texlive
          key: ${{ runner.os }}-texlive-${{ hashFiles('.github/workflows/*.yml') }}
          restore-keys: |
            ${{ runner.os }}-texlive-

      # --- Step 8. 安装 LaTeX 环境与字体（包含中文支持）---
      - name: Install TeX Live and fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            texlive-xetex texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended \
            texlive-lang-chinese fonts-noto-cjk fonts-liberation latexmk
          fc-cache -fv

      # --- Step 9. 构建 PDF ---
      - name: Build LaTeX project
        run: |
          uv run python main.py

      # --- Step 10. 打包 latex 文件夹 ---
      - name: Package latex directory
        run: |
          zip -r latex_source.zip latex

      # --- Step 11. 查找生成的 PDF ---
      - name: Find generated PDF
        id: find_pdf
        run: |
          PDF_PATH=$(find . -type f -name "*.pdf" | head -n 1)
          echo "pdf_path=$PDF_PATH" >> $GITHUB_OUTPUT

      # --- Step 12. 创建 Release 并上传产物 ---
      - name: Create Release and Upload Artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.find_pdf.outputs.pdf_path }}
            latex_source.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
